{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","alphabeticallySort","setState","lengthSort","reset","className","type","classNames","this","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAqBzB,OAnBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QAAS,OAAO,MAIhBR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SA1CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEjB,SAAUJ,EAASU,YAPvC,EAUEY,WAAa,WACX,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UAXvC,EAcEE,QAAU,WACR,EAAKO,UAAS,SAACH,GAAD,MACZ,CAAEb,YAAaa,EAAMb,gBAhB3B,EAoBEkB,MAAQ,WACN,EAAKF,SAAS,CACZjB,SAAUJ,EAASmB,KACnBd,YAAY,KAvBlB,4CA2BE,WACE,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYC,KAAKT,MAAMd,WAAaJ,EAASU,WAEjDkB,QAASD,KAAKP,mBAPhB,iCAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYC,KAAKT,MAAMd,WAAaJ,EAASY,SAEjDgB,QAASD,KAAKL,WAPhB,4BAYA,wBACEG,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaC,KAAKT,MAAMb,aAE5BuB,QAASD,KAAKb,QAPhB,qBAYGa,KAAKT,MAAMd,WAAaJ,EAASmB,MAEhC,wBACEM,KAAK,SACLD,UAAU,4BACVI,QAASD,KAAKJ,MAHhB,sBASN,6BACE,6BAEIrB,EAAkBD,EAAiB0B,KAAKT,OACrCW,KAAI,SAAAC,GAAI,OACP,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBApFzB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d3e084d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  alphabeticallySort = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  lengthSort = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.alphabeticallySort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={this.lengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { (this.state.sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n        <ul>\n          <ul>\n            {\n              getReorderedGoods(goodsFromServer, this.state)\n                .map(good => (\n                  <li\n                    key={good}\n                    data-cy=\"Good\"\n                  >\n                    {good}\n                  </li>\n                ))\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}